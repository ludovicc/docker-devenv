---

# Build the images

- name: Start squid-deb-proxy
  service: name=squid-deb-proxy state=started
  when: ansible_os_family == "Debian"

- name: Pull latest repositories
  command: docker pull {{ item }}
  with_items: external_docker_images
  tags: update

- name: Prepare building the images
  action: >
    shell [ -x create.sh ] && ./create.sh || true
    chdir={{ images_path }}/{{ item }}
  with_items: docker_images

- name: Build the images
  action: >
    shell docker build -t="{{ docker_registry }}/{{ item }}" . && ( [ -x post-create.sh ] && ./post-create.sh || true )
    chdir={{ images_path }}/{{ item }}
  with_items: docker_images

- name: Push images to the registry
  command: 'docker push "{{ docker_registry }}/{{ item }}" chdir={{ images_path }}/{{ item }}'
  with_items: docker_images

- name: Cleanup build area
  file: path={{ images_path }}/{{ item }}/tmp state=absent
  with_items: docker_images

#- name: Notify Flowdock that a new build has been done
#  flowdock: xxx
